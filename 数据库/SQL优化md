# SQL优化

## 避免索引失效

### 什么时候没用

1. 有or必全有索引;

2. 复合索引未用左列字段;

    a、b、c建立索引
    有效索引：
    ① a
    ②a,b
    ③a,b,c

3. like以%开头;

    使用最左精确匹配like ‘name%’ ,其他方式全表扫描

4. 需要类型转换;

5. where中索引列有运算;

6. where中索引列使用了函数;

7. 如果mysql觉得全表扫描更快时（数据少）;

### 什么时没必要用

1. 唯一性差;
2. 频繁更新的字段不用（更新索引消耗）;
3. where中不用的字段;
4. 索引使用<>时，效果一般;

### 详述

索引并不是时时都会生效的，比如以下几种情况，将导致索引失效：

- 如果条件中有or，即使其中有部分条件带索引也不会使用(这也是为什么尽量少用or的原因)，例子中user_id无索引

注意：要想使用or，又想让索引生效，只能将or条件中的每个列都加上索引

![img](https://img2018.cnblogs.com/blog/1623038/201906/1623038-20190619181118118-1784753048.png)

- 对于复合索引，如果不使用前列，后续列也将无法使用，类电话簿。
- like查询是以%开头

![img](https://img2018.cnblogs.com/blog/1623038/201906/1623038-20190619181236139-968114236.png)

- 存在索引列的数据类型隐形转换，则用不上索引，比如列类型是字符串，那一定要在条件中将数据使用引号引用起来,否则不使用索引

![img](https://img2018.cnblogs.com/blog/1623038/201906/1623038-20190619181326223-1654473887.png)

- where 子句里对索引列上有数学运算，用不上索引

![img](https://img2018.cnblogs.com/blog/1623038/201906/1623038-20190619181436583-1773123023.png)

- where 子句里对有索引列使用函数，用不上索引

![img](https://img2018.cnblogs.com/blog/1623038/201906/1623038-20190619181457265-1885631328.png)

- 如果mysql估计使用全表扫描要比使用索引快,则不使用索引

> 比如数据量极少的表



### 什么情况下不推荐使用索引？

1) 数据唯一性差（一个字段的取值只有几种时）的字段不要使用索引

> 比如性别，只有两种可能数据。意味着索引的二叉树级别少，多是平级。这样的二叉树查找无异于全表扫描。

2) 频繁更新的字段不要使用索引

> 比如logincount登录次数，频繁变化导致索引也频繁变化，增大数据库工作量，降低效率。

3) 字段不在where语句出现时不要添加索引,如果where后含IS NULL /IS NOT NULL/ like ‘%输入符%’等条件，不建议使用索引

> 只有在where语句出现，mysql才会去使用索引

4） where 子句里对索引列使用不等于（<>），使用索引效果一般



