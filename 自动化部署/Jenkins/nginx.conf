user  5g_app;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    gzip_types text/plain application/javascript text/css;

    # 虚拟主机server块
    server {
		listen       9092;
		server_name  localhost;

		#access_log  /var/log/nginx/host.access.log  main;

		location / {
			root   /usr/share/nginx/html;
			index  index.html index.htm;
			try_files $uri $uri/ @router;
		}
		location @router {
			# last ：相当于Apache里德(L)标记，【表示完成rewrite ！important】【将得到的路径重新进行一次路径匹配】，浏览器地址栏【URL地址不变】
			# break；本条规则匹配完成后，【终止匹配  ！important】，【不再匹配后面的规则】，浏览器地址栏【URL地址不变】 一般不用这个选项！
			# redirect： 返回302临时重定向，浏览器地址【会显示跳转后的URL地址】
			# permanent：返回301永久重定向，浏览器地址栏【会显示跳转后的URL地址】
			# 1.静态资源，去掉项目名，进行定向 \为转义， nginx 中的 / 不代表正则，所以不需要转义
			rewrite (static/.*)$ /$1   redirect;
			# 2.非静态资源，直接定向index.html
			rewrite ^.*$   /index.html  last;
		}
		# 后端接口，反向代理  
		location /api {
			#  反向代理
			rewrite  ^.+api/?(.*)$ /$1 break;
			include  uwsgi_params;
			proxy_pass http://127.0.0.1:8088;
		}

		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   /usr/share/nginx/html;
		}

	}

    include /etc/nginx/conf.d/*.conf;
}